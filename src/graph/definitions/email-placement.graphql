type Query {
  allEmailPlacements(pagination: PaginationInput = {}, sort: EmailPlacementSortInput = {}): EmailPlacementConnection!
  searchEmailPlacements(pagination: PaginationInput = {}, phrase: String!): EmailPlacementConnection!
  autocompleteEmailPlacements(pagination: PaginationInput = {}, phrase: String!): EmailPlacementConnection!
  emailPlacement(input: ModelIdInput!): EmailPlacement!
}

type Mutation {
  createEmailPlacement(input: CreateEmailPlacementInput!): EmailPlacement! @readOnly
  updateEmailPlacement(input: UpdateEmailPlacementInput!): EmailPlacement! @readOnly
  deleteEmailPlacement(input: ModelIdInput!): String! @readOnly
}

enum EmailPlacementSortField {
  name
  createdAt
  updatedAt
}

type EmailPlacement implements UserAttribution & Timestampable {
  id: String!
  name: String!
  fullName: String!
  emailDeployment: EmailDeployment!
  updatedAt: Date
  createdAt: Date
  createdBy: User!
  updatedBy: User!
}

type EmailPlacementConnection {
  totalCount: Int!
  edges: [EmailPlacementEdge]!
  pageInfo: PageInfo!
}

type EmailPlacementEdge {
  node: EmailPlacement!
  cursor: Cursor!
}

input EmailPlacementSortInput {
  field: EmailPlacementSortField! = createdAt
  order: Int! = -1
}

input EmailPlacementPayloadInput {
  name: String
  deploymentId: String!
}

input CreateEmailPlacementInput {
  payload: EmailPlacementPayloadInput!
}

input UpdateEmailPlacementInput {
  id: String!
  payload: EmailPlacementPayloadInput!
}
