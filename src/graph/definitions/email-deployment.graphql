type Query {
  allEmailDeployments(pagination: PaginationInput = {}, sort: EmailDeploymentSortInput = {}): EmailDeploymentConnection!
  searchEmailDeployments(pagination: PaginationInput = {}, phrase: String!): EmailDeploymentConnection!
  autocompleteEmailDeployments(pagination: PaginationInput = {}, phrase: String!): EmailDeploymentConnection!
  emailDeployment(input: ModelIdInput!): EmailDeployment!
}

type Mutation {
  createEmailDeployment(input: CreateEmailDeploymentInput!): EmailDeployment! @readOnly
  deleteEmailDeployment(input: ModelIdInput!): String! @readOnly
  updateEmailDeployment(input: UpdateEmailDeploymentInput!): EmailDeployment! @readOnly
}

enum EmailDeploymentSortField {
  name
  createdAt
  updatedAt
}

type EmailDeployment implements UserAttribution & Timestampable {
  id: String!
  name: String!
  fullName: String!
  publisher: Publisher!
  placements(pagination: PaginationInput = {}, sort: EmailPlacementSortInput = {}): EmailPlacementConnection!

  updatedAt: Date
  createdAt: Date
  createdBy: User!
  updatedBy: User!
}

type EmailDeploymentConnection {
  totalCount: Int!
  edges: [EmailDeploymentEdge]!
  pageInfo: PageInfo!
}

type EmailDeploymentEdge {
  node: EmailDeployment!
  cursor: Cursor!
}

input EmailDeploymentSortInput {
  field: EmailDeploymentSortField! = createdAt
  order: Int! = -1
}

input CreateEmailDeploymentInput {
  payload: EmailDeploymentPayloadInput!
}

input EmailDeploymentPayloadInput {
  name: String!
  publisherId: String!
}

input UpdateEmailDeploymentInput {
  id: String!
  payload: EmailDeploymentPayloadInput!
}
